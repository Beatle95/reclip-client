module;

#include <QCoreApplication>
#include <QEventLoop>
#include <cassert>

#include "gtest/gtest.h"

class QCoreApplication;

export module core.test_with_event_loop_base;

namespace reclip {

export class TestWithEventLoopBase : public ::testing::Test {
 public:
  ~TestWithEventLoopBase() override;
  void SetUp() override;
  void TearDown() override;

  void RunEventLoopUntilIdle();
  void RunEventLoop();
  void ExitEventLoop(int status = 0);

 private:
  std::unique_ptr<QCoreApplication> app_;
};

TestWithEventLoopBase::~TestWithEventLoopBase() = default;

void TestWithEventLoopBase::SetUp() {
  int argc = 0;
  char** argv = nullptr;
  app_ = std::make_unique<QCoreApplication>(argc, argv);
}

void TestWithEventLoopBase::TearDown() { app_.reset(); }

void TestWithEventLoopBase::RunEventLoopUntilIdle() {
  QCoreApplication::processEvents();
}

void TestWithEventLoopBase::RunEventLoop() {
  assert(app_);
  app_->exec();
}

void TestWithEventLoopBase::ExitEventLoop(int status) {
  app_->exit(status);
}

}  // namespace reclip
